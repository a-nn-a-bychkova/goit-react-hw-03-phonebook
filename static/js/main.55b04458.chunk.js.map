{"version":3,"sources":["components/styles/Input.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","Form","Label","type","onChange","Input","Component","ContactList","contacts","onDeleteContact","List","map","id","Item","Text","onClick","Filter","App","filter","addContact","some","contact","toLowerCase","alert","newContact","shortid","generate","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","visibleContacts","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55b04458.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Input_Form__2wd_6\",\"Label\":\"Input_Label__1tSf4\",\"Input\":\"Input_Input__6gLzx\"};","import React, { Component } from 'react';\r\nimport s from '../styles/Input.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.Form}>\r\n        <label className={s.Label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            className={s.Input}\r\n          />\r\n        </label>\r\n        <label className={s.Label}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            className={s.Input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.List}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.Item}>\r\n        <p className={s.Text}>\r\n          {name}: {number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            onDeleteContact(id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from '../styles/Input.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.Label}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} className={s.Input} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport ContactForm from './ContactForm';\nimport initialContacts from '../initialContacts.json';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  state = {\n    // contacts: initialContacts,\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const isNameInContact = this.state.contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isNameInContact) {\n      alert(`${name} is already in contact`);\n    } else {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { name, number, filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 0 ? (\n          <Filter value={filter} onChange={this.changeFilter} />\n        ) : (\n          <p>Your phonebook is empty</p>\n        )}\n\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nApp.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__kgjt1\",\"Item\":\"ContactList_Item__Ytb26\",\"Text\":\"ContactList_Text__jAsfu\"};"],"sourceRoot":""}